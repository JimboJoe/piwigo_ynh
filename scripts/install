#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC
language=$YNH_APP_ARG_LANGUAGE

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Normalize the url path syntax
path_url=$(ynh_normalize_url_path $path_url)

# Register (book) web path
ynh_webpath_register $app $domain $path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path_url
ynh_app_setting_set $app admin $admin
ynh_app_setting_set $app is_public $is_public
ynh_app_setting_set $app language $language

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_install_app_dependencies "$pkg_dependencies"

#=================================================
# CREATE A MYSQL DB
#=================================================

db_name=$(ynh_sanitize_dbid $app)
ynh_app_setting_set $app db_name $db_name
ynh_mysql_setup_db $db_name $db_name

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

ynh_app_setting_set $app final_path $final_path

# Create tmp directory and fetch app inside
tmpdir="$(ynh_smart_mktemp --min_size=300)"
ynh_setup_source "$tmpdir"

# Fetch needed plugins
mkdir -p $tmpdir/plugins/Ldap_Login
ynh_setup_source "$tmpdir/plugins/Ldap_Login" ldap_plugin
ynh_setup_source "$tmpdir/plugins" log_failed_logins_plugin

#=================================================
# CREATE DEDICATED USER
#=================================================

# Create a system user
ynh_system_user_create $app

#=================================================
# NGINX CONFIGURATION
#=================================================

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# SPECIFIC SETUP
#=================================================
# COPY FILES TO $FINAL_PATH
#=================================================

# sets extended pattern matching options in the bash shell
shopt -s extglob

# Install files and set permissions
mkdir $final_path
cp -a $tmpdir/!(upload|_data|galleries) $final_path

datapath=/home/yunohost.app/$app
mkdir -p $datapath/_data
mkdir -p $datapath/upload
mkdir -p $datapath/galleries

ln -sd $datapath/_data $final_path/_data
ln -sd $datapath/upload $final_path/upload
ln -sd $datapath/galleries $final_path/galleries

cp -Rp $tmpdir/_data/. $final_path/_data
cp -Rp $tmpdir/upload/. $final_path/upload
cp -Rp $tmpdir/galleries/. $final_path/galleries

chown -R $app: $final_path
chown -R $app: $datapath
chmod 755 -R $final_path/_data

ynh_secure_remove "$tmpdir"

#=================================================
# PHP-FPM CONFIGURATION
#=================================================

# Create a dedicated php-fpm config
ynh_add_fpm_config

#=================================================
# SETUP APPLICATION WITH CURL
#=================================================

ynh_app_setting_set $app unprotected_uris "/"
# Reload SSOwat config
yunohost app ssowatconf

# Reload Nginx
systemctl reload nginx

# Generate random password for admin
adm_pwd=$(ynh_string_random 24)
ynh_app_setting_set $app admin_pwd "$adm_pwd"

if [ "$language" = "fr" ] ; then
  applanguage="fr_FR"
else
  applanguage="en_UK"
fi

# Configure piwigo via curl
mail="$(ynh_user_get_info $admin mail)"

# Installation with curl
ynh_local_curl "/install.php?language=$applanguage" "install=true" "dbuser=$db_name" "dbpasswd=$db_pwd" "dbname=$db_name" "admin_name=$admin" "admin_pass1=$adm_pwd" "admin_pass2=$adm_pwd" "admin_mail=$mail"

#=================================================
# CONFIGURE PIWIGO
#=================================================

# Change local config
cp ../conf/config.inc.php $final_path/local/config/

# Calculate and store the config file checksum
ynh_store_file_checksum "$final_path/local/config/config.inc.php"

# Setup database in local/config/database.inc.php
ynh_replace_string "__DBTOCHANGE__" "$db_name" ../conf/database.inc.php
ynh_replace_string "__USERTOCHANGE__" "$db_name" ../conf/database.inc.php
ynh_replace_string "__PASSTOCHANGE__" "$db_pwd" ../conf/database.inc.php

cp ../conf/database.inc.php $final_path/local/config/database.inc.php

# Calculate and store the database config file checksum
ynh_store_file_checksum "$final_path/local/config/database.inc.php"

#=================================================
# ADD LDAP PLUGINS
#=================================================

# Configure and activate LDAP plugin
ynh_mysql_connect_as $db_name $db_pwd $db_name <<< "INSERT INTO plugins (id,state,version) VALUES ('Ldap_Login','active','1.1');"
cp ../conf/data.dat $final_path/plugins/Ldap_Login

#=================================================
# CONFIGURE FAIL2BAN
#=================================================

# Configure and activate log_failed_logins plugin
ynh_mysql_connect_as $db_name $db_pwd $db_name <<< "INSERT INTO plugins (id,state,version) VALUES ('log_failed_logins','active','1.2');"
ynh_mysql_connect_as $db_name $db_pwd $db_name <<< "INSERT INTO config (param, value) VALUES ('logFailedLoginsFilename','/var/log/${app}FailedLogins.log');"

touch "/var/log/${app}FailedLogins.log"
chown $app: "/var/log/${app}FailedLogins.log"

ynh_add_fail2ban_config --logpath="/var/log/${app}FailedLogins.log" --failregex="ip=<HOST>" --max_retry=6

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP SSOWAT
#=================================================

# Protect URIs if private
if [ $is_public -eq 0 ]
then
  ynh_app_setting_delete $app unprotected_uris
  ynh_app_setting_set $app protected_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================

systemctl reload nginx

